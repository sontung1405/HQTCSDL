//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace BDS_2020.Class
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Windows;
    public partial class BD
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]

        public DataProvider DP { get; set; }

        public BD()
        {
            this.LichSuGiaoDiches = new HashSet<LichSuGiaoDich>();
            this.LichSuXems = new HashSet<LichSuXem>();
            DP = new DataProvider();
        }

        public string MaNha { get; set; }
        public string MaCN { get;set; }
        public string NhaBan_Thue { get; set; }
        private string maNV;
        public string MaNV {
            get
            {
                return maNV;
            }
            set
            {
                if (maNV != null)
                {
                    var staff = DP.Database.NhanViens.SingleOrDefault(p => p.MaNV == value && p.DeleteStatus == false);
                    if (staff == null)
                    {
                        MessageBox.Show("Không tồn tại mã nhân viên nhánh đã nhập");
                        return;
                    }
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.maNV = value;
                    DP.Database.SaveChanges();
                }
                maNV = value;
            }
        }

        private string maChiNhanh;
        public string MaChiNhanh {
            get
            {
                return maChiNhanh;
            }
            set
            {
                if (maChiNhanh != null)
                {
                    var branch = DP.Database.ChiNhanhs.SingleOrDefault(p => p.MaChiNhanh == value && p.DeleteStatus == false);
                    if (branch == null)
                    {
                        MessageBox.Show("Không tồn tại mã chi nhánh đã nhập");
                        return;
                    }
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.maChiNhanh = value;
                    DP.Database.SaveChanges();
                }
                maChiNhanh = value;
            }
        }
        private Nullable<decimal> giaBan_GiaThue;
        public Nullable<decimal> GiaBan_GiaThue {
            get
            {
                return giaBan_GiaThue;
            }
            set
            {
                if(giaBan_GiaThue != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.giaBan_GiaThue = value;
                    DP.Database.SaveChanges();
                }
                giaBan_GiaThue = value;
               
            }
        }
        public string DieuKien { get; set; }
        private string duong;
        public string Duong {
            get
            {
                return duong;
            }
            set
            {
                if (duong != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.duong = value;
                    DP.Database.SaveChanges();
                }
                duong = value;
            }
        }
        private string quan;
        public string Quan {
            get
            {
                return quan;
            }
            set
            {
                if (quan != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.quan = value;
                    DP.Database.SaveChanges();
                }
                quan = value;
            }
        }
        private string tP;
        public string TP {
            get
            {
                return tP;
            }
            set
            {
                if (tP != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.tP = value;
                    DP.Database.SaveChanges();
                }
                tP = value;
            }
        }
        private string khuVuc;
        public string KhuVuc {
            get
            {
                return khuVuc;
            }
            set
            {
                if (khuVuc != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.khuVuc = value;
                    DP.Database.SaveChanges();
                }
                khuVuc = value;
            }
        }
        private string maLoai;
        public string MaLoai {
            get
            {
                return maLoai;
            }
            set
            {
                if (maLoai != null)
                {
                    var type = DP.Database.LoaiNhas.SingleOrDefault(p => p.MaLoai == value && p.DeleteStatus == false);
                    if(type == null)
                    {
                        MessageBox.Show("Không tồn tại loại nhà");
                        return;
                    }
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.maLoai = value;
                    DP.Database.SaveChanges();
                }
                maLoai = value;
            }
        }
        private Nullable<int> soPhong;
        public Nullable<int> SoPhong {
            get
            {
                return soPhong;
            }
            set
            {
                if (soPhong != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.soPhong = value;
                    DP.Database.SaveChanges();
                }
                soPhong = value;
            }
        }
        private Nullable<System.DateTime> ngayDang;
        public Nullable<System.DateTime> NgayDang {
            get
            {
                return ngayDang;
            }
            set
            {
                if (ngayDang != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.ngayDang = value;
                    DP.Database.SaveChanges();
                }
                ngayDang = value;
            }
        }
        private Nullable<System.DateTime> ngayHetHang;
        public Nullable<System.DateTime> NgayHetHang {
            get
            {
                return ngayHetHang;
            }
            set
            {
                if (ngayHetHang != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.ngayHetHang = value;
                    DP.Database.SaveChanges();
                }
                ngayHetHang = value;
            }
        }
        private string tinhTrang;
        public string TinhTrang {
            get
            {
                return tinhTrang;
            }
            set
            {
                if (tinhTrang != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.tinhTrang = value;
                    DP.Database.SaveChanges();
                }
                tinhTrang = value;
            }
        }
        private Nullable<int> luotXem;
        public Nullable<int> LuotXem {
            get
            {
                return luotXem;
            }
            set
            {
                if (luotXem != null)
                {
                    var house = DP.Database.BDS.SingleOrDefault(p => p.MaNha == this.MaNha && p.MaCN == this.MaCN);
                    house.luotXem = value;
                    DP.Database.SaveChanges();
                }
                luotXem = value;
            }
        }
        public Nullable<bool> DeleteStatus { get; set; }
    
        public virtual ChiNhanh ChiNhanh { get; set; }
        public virtual KhachHang KhachHang { get; set; }
        public virtual LoaiNha LoaiNha { get; set; }
        public virtual NhanVien NhanVien { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LichSuGiaoDich> LichSuGiaoDiches { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LichSuXem> LichSuXems { get; set; }
    }
}
